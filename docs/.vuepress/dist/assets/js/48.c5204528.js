(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{409:function(a,t,_){"use strict";_.r(t);var s=_(16),v=Object(s.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"mqtt进阶"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mqtt进阶"}},[a._v("#")]),a._v(" MQTT进阶")]),a._v(" "),t("h1",{attrs:{id:"_1-qos介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-qos介绍"}},[a._v("#")]),a._v(" 1 QoS介绍")]),a._v(" "),t("h2",{attrs:{id:"_1-1-qos简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-qos简介"}},[a._v("#")]),a._v(" 1.1 QoS简介")]),a._v(" "),t("p",[a._v("使用MQTT协议的设备大部分都是运行在"),t("code",[a._v("网络受限")]),a._v("的环境下，而只依靠底层的TCP传输协议，"),t("code",[a._v("并不能完全保证消息的可靠到达。")])]),a._v(" "),t("p",[a._v("MQTT提供了QoS机制，其核心是"),t("code",[a._v("设计了多种消息交互机制来提供不同的服务质量")]),a._v("，来满足用户在各种场景下对消息可靠性的要求。")]),a._v(" "),t("p",[a._v("MQTT 定义了三个 QoS 等级，分别为：")]),a._v(" "),t("p",[a._v("1、QoS 0，最多交付一次  -----\x3e 可能丢失消息")]),a._v(" "),t("p",[a._v("2、QoS 1，至少交付一次  -----\x3e 可以保证收到消息，但消息可能重复")]),a._v(" "),t("p",[a._v("3、QoS 2，只交付一次    -----\x3e 可以保证消息既不丢失也不重复")]),a._v(" "),t("p",[t("code",[a._v("QoS等级是由发布者在PUBLISH报文中指定的")]),a._v("，大部分情况下Broker向订阅者转发消息时都会维持原始的 QoS 不变。不过也有一些例外的情况，根据订阅者的订阅要求，")]),a._v(" "),t("p",[a._v("消息的 QoS 等级可能会在转发的时候发生降级。")]),a._v(" "),t("p",[a._v("例如，订阅者在订阅时要求Broker可以向其转发的消息的最大QoS等级为QoS 1，那么后续所有QoS 2消息都会降级至QoS 1转发给此订阅者，而所有QoS 0和QoS 1消息")]),a._v(" "),t("p",[a._v("则会保持原始的QoS等级转发。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702174.png",alt:"image-20240530112242047"}})]),a._v(" "),t("h2",{attrs:{id:"_1-2-qos-0原理介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-qos-0原理介绍"}},[a._v("#")]),a._v(" 1.2 QoS 0原理介绍")]),a._v(" "),t("h3",{attrs:{id:"_1-2-1-通讯原理说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-通讯原理说明"}},[a._v("#")]),a._v(" 1.2.1 通讯原理说明")]),a._v(" "),t("p",[a._v("QoS 0 是最低的 QoS 等级。"),t("strong",[a._v("QoS 0 消息即发即弃，不需要等待确认，不需要存储和重传，因此对于接收方来说，永远都不需要担心收到重复的消息。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702175.png",alt:"image-20240530112525548"}})]),a._v(" "),t("p",[a._v("涉及到的相关报文：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702176.png",alt:"image-20240529164130090"}})]),a._v(" "),t("h3",{attrs:{id:"_1-2-2-qos-0消息丢失原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-qos-0消息丢失原因"}},[a._v("#")]),a._v(" 1.2.2 QoS 0消息丢失原因")]),a._v(" "),t("p",[a._v("当我们使用 QoS 0 传递消息时，"),t("code",[a._v("消息的可靠性完全依赖于底层的 TCP 协议。")]),a._v("而 TCP 只能保证在"),t("code",[a._v("连接稳定不关闭的情况下消息的可靠到达")]),a._v("，一旦出现连接关闭、重置，")]),a._v(" "),t("p",[a._v("仍有可能丢失当前处于网络链路或操作系统底层缓冲区中的消息。这也是 QoS 0 消息最主要的丢失场景。")]),a._v(" "),t("h2",{attrs:{id:"_1-3-qos-1原理介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-qos-1原理介绍"}},[a._v("#")]),a._v(" 1.3 QoS 1原理介绍")]),a._v(" "),t("h3",{attrs:{id:"_1-3-1-通讯原理说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-通讯原理说明"}},[a._v("#")]),a._v(" 1.3.1 通讯原理说明")]),a._v(" "),t("p",[a._v("为了保证消息到达，QoS 1 加入了应答与重传机制，发送方只有在收到接收方的 PUBACK 报文以后，才能认为消息投递成功，在此之前，发送方需要存储该 PUBLISH 报")]),a._v(" "),t("p",[a._v("文以便下次重传。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702177.png",alt:"image-20240530115618361"}})]),a._v(" "),t("p",[a._v("QoS 1需要在 PUBLISH 报文中设置 Packet ID，而作为响应的 PUBACK 报文，则会使用与 PUBLISH 报文相同的 Packet ID，以便发送方收到后删除正确PUBLISH")]),a._v(" "),t("p",[a._v("报文缓存。")]),a._v(" "),t("p",[a._v("涉及到的相关报文：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702178.png",alt:"image-20240530140658567"}})]),a._v(" "),t("h3",{attrs:{id:"_1-3-2-qos-1-消息会重复原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-qos-1-消息会重复原因"}},[a._v("#")]),a._v(" 1.3.2 QoS 1 消息会重复原因")]),a._v(" "),t("p",[a._v("对于发送方来说，没收到 PUBACK 报文分为以下两种情况：")]),a._v(" "),t("p",[a._v("1、PUBLISH 未到达接收方")]),a._v(" "),t("p",[a._v("2、PUBLISH 已经到达接收方，接收方的 PUBACK 报文还未到达发送方")]),a._v(" "),t("p",[a._v("在第一种情况下，发送方虽然重传了 PUBLISH 报文，但是对于接收方来说，实际上仍然仅收到了一次消息。")]),a._v(" "),t("p",[a._v("在第二种情况下，在发送方重传时，接收方已经收到过了这个 PUBLISH 报文，这就导致接收方将收到重复的消息。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702179.png",alt:"image-20240530141214756"}})]),a._v(" "),t("p",[a._v("重传 PUBLISH 报文的时候，PUBLISH 中的 DUP 标志会被设置为 1，用以表示这是一个重传的报文。")]),a._v(" "),t("h2",{attrs:{id:"_1-4-qos-2原理介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-qos-2原理介绍"}},[a._v("#")]),a._v(" 1.4 QoS 2原理介绍")]),a._v(" "),t("h3",{attrs:{id:"_1-4-1-通讯原理说明"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1-通讯原理说明"}},[a._v("#")]),a._v(" 1.4.1 通讯原理说明")]),a._v(" "),t("p",[a._v("QoS 2 解决了 QoS 0、1 消息可能丢失或者重复的问题，但相应地，它也带来了最复杂的交互流程和最高的开销。每一次的 QoS 2 消息投递，都"),t("code",[a._v("要求发送方与接收方")])]),a._v(" "),t("p",[t("code",[a._v("进行至少两次请求/响应流程。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702180.png",alt:"image-20240530143443201"}})]),a._v(" "),t("p",[a._v("流程说明：")]),a._v(" "),t("p",[a._v("1、首先，发送方存储并发送 QoS 为 2 的 PUBLISH 报文以启动一次 QoS 2 消息的传输，然后等待接收方回复 PUBREC 报文。这一部分与 QoS 1 基本一致，只是响")]),a._v(" "),t("p",[a._v("应报文从 PUBACK 变成了 PUBREC。")]),a._v(" "),t("p",[a._v("2、当发送方收到 PUBREC 报文，即可确认对端已经收到了 PUBLISH 报文，发送方将"),t("strong",[a._v("不再需要重传")]),a._v("这个报文，并且也"),t("strong",[a._v("不能再重传")]),a._v("这个报文。所以此时发送方可以删除本地")]),a._v(" "),t("p",[a._v("存储的 PUBLISH 报文，然后发送一个 PUBREL 报文，通知对端自己准备将本次使用的 Packet ID 标记为可用了。与 PUBLISH  报文一样，我们需要确保 PUBREL")]),a._v(" "),t("p",[a._v("报文到达对端，所以也需要一个响应报文，并且这个 PUBREL 报文需要被存储下来以便后续重传。")]),a._v(" "),t("p",[a._v("3、当接收方收到 PUBREL 报文，也可以确认在这一次的传输流程中不会再有重传的 PUBLISH 报文到达，因此回复 PUBCOMP 报文表示自己也准备好将当前的 Packet")]),a._v(" "),t("p",[a._v("ID 用于新的消息了。")]),a._v(" "),t("p",[a._v("4、当发送方收到 PUBCOMP 报文，这一次的 QoS 2 消息传输就算正式完成了。在这之后，发送方可以再次使用当前的 Packet ID 发送新的消息，而接收方再次收到使")]),a._v(" "),t("p",[a._v("用这个 Packet ID 的 PUBLISH 报文时，也会将它视为一个全新的消息。")]),a._v(" "),t("p",[a._v("涉及到的报文：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702181.png",alt:"image-20240529165107620"}})]),a._v(" "),t("h3",{attrs:{id:"_1-4-2-qos-2消息不会重复原因"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2-qos-2消息不会重复原因"}},[a._v("#")]),a._v(" 1.4.2 QoS 2消息不会重复原因")]),a._v(" "),t("p",[a._v("消息不丢失原因：与 QoS 1 相同")]),a._v(" "),t("p",[a._v("消息不会重复原因：")]),a._v(" "),t("p",[t("strong",[a._v("快速回顾一下 QoS 1 消息无法避免重复的原因：")])]),a._v(" "),t("p",[a._v("当我们使用 QoS 1 消息时，对接收方来说，回复完 PUBACK 这个响应报文以后 Packet ID  就重新可用了，也不管响应是否确实已经到达了发送方。所以就无法得知")]),a._v(" "),t("p",[a._v("之后到达的，携带了相同 Packet ID 的 PUBLISH  报文，到底是发送方因为没有收到响应而重传的，还是发送方因为收到了响应所以重新使用了这个 Packet ID 发")]),a._v(" "),t("p",[a._v("送了一个全新的消息。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702182.png",alt:"image-20240530153731117"}})]),a._v(" "),t("p",[a._v("所以，消息去重的关键就在于，通信双方如何正确地同步释放 Packet ID，换句话说，不管发送方是重传消息还是发布新消息，一定是和对端达成共识了的。而 QoS 2")]),a._v(" "),t("p",[a._v("中增加的 PUBREL 流程，正是提供了帮助通信双方协商 Packet ID 何时可以重用的能力。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702183.png",alt:"image-20240530153941189"}})]),a._v(" "),t("p",[t("code",[a._v("QoS 2 规定，发送方只有在收到 PUBREC 报文之前可以重传 PUBLISH 报文。一旦收到 PUBREC 报文并发出 PUBREL 报文，发送方就进入了 Packet ID 释放流")])]),a._v(" "),t("p",[t("code",[a._v("程，不可以再使用当前 Packet ID 重传 PUBLISH 报文。同时，在收到对端回复的 PUBCOMP 报文确认双方都完成 Packet ID 释放之前，也不可以使用当前")])]),a._v(" "),t("p",[t("code",[a._v("Packet ID 发送新的消息。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702184.png",alt:"image-20240530154057335"}})]),a._v(" "),t("p",[a._v("因此，对于接收方来说，能够以 "),t("strong",[a._v("PUBREL 报文为界限")]),a._v("，凡是在 PUBREL 报文之前到达的 PUBLISH 报文，都必然是重复的消息；而凡是在 PUBREL 报文之后到达的")]),a._v(" "),t("p",[a._v("PUBLISH 报文，都必然是全新的消息。一旦有了这个前提，我们就能够在协议层面完成 QoS 2 消息的去重。")]),a._v(" "),t("h2",{attrs:{id:"_1-5-不同qos的适用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-不同qos的适用场景"}},[a._v("#")]),a._v(" 1.5 不同QoS的适用场景")]),a._v(" "),t("h3",{attrs:{id:"_1-5-1-qos-0"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1-qos-0"}},[a._v("#")]),a._v(" 1.5.1 QoS 0")]),a._v(" "),t("p",[a._v("QoS 0 的缺点是可能会丢失消息，消息丢失的频率依赖于你所处的网络环境，并且可能使你错过断开连接期间的消息，不过优点是投递的效率较高。")]),a._v(" "),t("p",[a._v("所以我们通常选择使用 QoS 0 传输一些"),t("code",[a._v("高频且不那么重要的数据")]),a._v("，比如"),t("code",[a._v("传感器数据")]),a._v("，周期性更新，即使遗漏几个周期的数据也可以接受。")]),a._v(" "),t("h3",{attrs:{id:"_1-5-2-qos-1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2-qos-1"}},[a._v("#")]),a._v(" 1.5.2 QoS 1")]),a._v(" "),t("p",[a._v("QoS 1 可以保证消息到达，所以适合传输一些"),t("code",[a._v("较为重要的数据")]),a._v("，比如"),t("code",[a._v("下达关键指令、更新重要的有实时性要求的状态")]),a._v("等。但因为 QoS 1 还可能会导致消息重复，所以当")]),a._v(" "),t("p",[a._v("我们选择使用 QoS 1 时，还需要能够处理消息的重复，或者能够允许消息的重复。")]),a._v(" "),t("p",[a._v("消息重复带来的危害：")]),a._v(" "),t("p",[a._v("如果我们不对 QoS 1 进行去重处理，我们可能会遭遇这种情况，发布方以 1、2 的顺序发布消息，但最终订阅方接收到的消息顺序可能是  1、2、1、2。如果 1 表示开")]),a._v(" "),t("p",[a._v("灯指令，2  表示关灯指令，我想大部分用户都不会接受自己仅仅进行了开灯然后关灯的操作，结果灯在开和关的状态来回变化。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702185.png",alt:"image-20240530155613490"}})]),a._v(" "),t("h3",{attrs:{id:"_1-5-3-qos-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-3-qos-2"}},[a._v("#")]),a._v(" 1.5.3 QoS 2")]),a._v(" "),t("p",[a._v("QoS 2 既可以保证消息到达，也可以保证消息不会重复，但传输成本最高。如果我们不愿意自行实现去重方案，并且能够接受 QoS 2 带来的额外开销，那么 QoS 2 将是")]),a._v(" "),t("p",[a._v("一个合适的选择。通常我们会在"),t("code",[a._v("金融、航空")]),a._v("等行业场景下会更多地见到 QoS 2 的使用。")]),a._v(" "),t("h1",{attrs:{id:"_2-主题详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-主题详解"}},[a._v("#")]),a._v(" 2 主题详解")]),a._v(" "),t("p",[a._v("MQTT 主题本质上是一个 UTF-8 编码的字符串，是 MQTT 协议进行消息路由的基础。MQTT 主题类似 URL 路径，使用斜杠 "),t("code",[a._v("/")]),a._v(" 进行分层：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("chat/room/1\ntest/10/temperature\ntest/+/temperature\ntest/"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("为了避免歧义且易于理解，通常"),t("strong",[a._v("不建议主题")]),a._v("以 "),t("code",[a._v("/")]),a._v(" 开头或结尾，例如 "),t("code",[a._v("/chat")]),a._v(" 或 "),t("code",[a._v("chat/")]),a._v("。")]),a._v(" "),t("p",[a._v("MQTT 主题不需要提前创建。MQTT 客户端在订阅或发布时即"),t("strong",[a._v("自动的创建了主题")]),a._v("，开发者无需再关心主题的创建，并且也不需要手动删除主题。")]),a._v(" "),t("h2",{attrs:{id:"_2-1-主题通配符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-主题通配符"}},[a._v("#")]),a._v(" 2.1 主题通配符")]),a._v(" "),t("p",[a._v("MQTT 主题通配符包含单层通配符 "),t("code",[a._v("+")]),a._v(" 及多层通配符 "),t("code",[a._v("#")]),a._v("，主要用于"),t("code",[a._v("客户端一次订阅多个主题")]),a._v("。")]),a._v(" "),t("h3",{attrs:{id:"_2-1-1-单层通配符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-单层通配符"}},[a._v("#")]),a._v(" 2.1.1 单层通配符")]),a._v(" "),t("p",[a._v('加号 ("'),t("strong",[a._v("+")]),a._v('") 是用于'),t("code",[a._v("单个主题层级匹配的通配符")]),a._v("。在使用单层通配符时，单层通配符必须占据整个层级，例如：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("+ 有效\ntest/+ 有效\ntest/+/temperature 有效\ntest+ 无效（没有占据整个层级）\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("如果客户端订阅了主题 "),t("code",[a._v("test/+/temperature")]),a._v("，将会收到以下主题的消息：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("test/1/temperature\ntest/2/temperature\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\ntest/n/temperature\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("但是不会匹配以下主题：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("test/temperature\ntest/bedroom/1/temperature\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"_2-1-2-多层通配符"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-多层通配符"}},[a._v("#")]),a._v(" 2.1.2 多层通配符")]),a._v(" "),t("p",[a._v('井字符号（"'),t("strong",[a._v("#")]),a._v('"）是用于'),t("code",[a._v("匹配主题中任意层级的通配符")]),a._v("。多层通配符表示它的父级和任意数量的子层级，在使用多层通配符时，它必须占据整个层级并且"),t("code",[a._v("必须是主题的最后")])]),a._v(" "),t("p",[t("code",[a._v("一个字符")]),a._v("，例如：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 有效，匹配所有主题")]),a._v("\ntest/"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 有效")]),a._v("\ntest/bedroom"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 无效（没有占据整个层级）")]),a._v("\ntest/"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#/temperature 无效（不是主题最后一个字符）")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br")])]),t("p",[a._v("如果客户端订阅主题  "),t("code",[a._v("test/#")]),a._v("，它将会收到以下主题的消息：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("test")]),a._v("\ntest/temperature\ntest/1/temperature\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("h2",{attrs:{id:"_2-2-系统主题"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-系统主题"}},[a._v("#")]),a._v(" 2.2 系统主题")]),a._v(" "),t("p",[a._v("以 "),t("code",[a._v("$SYS/")]),a._v(" 开头的主题为系统主题，系统主题主要用于获取 MQTT 服务器"),t("code",[a._v("自身运行状态、消息统计、客户端上下线事件等数据")]),a._v("。目前，MQTT 协议暂未明确规定 "),t("code",[a._v("$SYS/")])]),a._v(" "),t("p",[a._v("主题标准，但大多数 MQTT 服务器都遵循该"),t("a",{attrs:{href:"https://github.com/mqtt/mqtt.org/wiki/SYS-Topics",target:"_blank",rel:"noopener noreferrer"}},[a._v("标准建议"),t("OutboundLink")],1),a._v("。")]),a._v(" "),t("p",[a._v("例如，EMQX 服务器支持通过以下主题获取集群状态:")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("主题")]),a._v(" "),t("th",[a._v("说明")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("$SYS/brokers")]),a._v(" "),t("td",[a._v("EMQX 集群节点列表")])]),a._v(" "),t("tr",[t("td",[a._v("$SYS/brokers/emqx@127.0.0.1/version")]),a._v(" "),t("td",[a._v("EMQX 版本")])]),a._v(" "),t("tr",[t("td",[a._v("$SYS/brokers/emqx@127.0.0.1/uptime")]),a._v(" "),t("td",[a._v("EMQX 运行时间")])]),a._v(" "),t("tr",[t("td",[a._v("$SYS/brokers/emqx@127.0.0.1/datetime")]),a._v(" "),t("td",[a._v("EMQX 系统时间")])])])]),a._v(" "),t("p",[a._v("EMQX 还支持客户端上下线事件、收发流量、消息收发、系统监控等丰富的系统主题，用户可通过订阅 "),t("code",[a._v("$SYS/#")]),a._v(" 主题获取所有系统主题消息。")]),a._v(" "),t("p",[a._v("系统主题文档：https://www.emqx.io/docs/zh/v5.0/observability/mqtt-system-topics.html?__hstc=3614191.d3e87b0aa86919c8c8f01e199a29f583.1715423024096.1717117142732.1717123186833.30&__hssc=3614191.2.1717123186833&__hsfp=3042319173#%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%8A%E4%B8%8B%E7%BA%BF%E4%BA%8B%E4%BB%B6")]),a._v(" "),t("p",[a._v("比如订阅客户端上下线事件主题：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SYS")]),a._v("/brokers/emqx@172.17.0.4/clients/+/connected\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 订阅客户端上线的主题")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$SYS")]),a._v("/brokers/emqx@172.17.0.4/clients/+/disconnected\t\t\t\t"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 订阅客户端下线的主题")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("p",[a._v("注意：监听系统主题需要在broker端开通对应的访问权限")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702186.png",alt:"image-20240531111647169"}})]),a._v(" "),t("h1",{attrs:{id:"_3-会话介绍"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-会话介绍"}},[a._v("#")]),a._v(" 3 会话介绍")]),a._v(" "),t("h2",{attrs:{id:"_3-1-mqtt会话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-mqtt会话"}},[a._v("#")]),a._v(" 3.1 MQTT会话")]),a._v(" "),t("p",[a._v("MQTT客户端和MQTT服务器之间的连接被称为会话。每个MQTT客户端都可以启动一个或多个会话，通过会话可以实现客户端和服务器之间的消息传递。")]),a._v(" "),t("h2",{attrs:{id:"_3-2-常见配置参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-常见配置参数"}},[a._v("#")]),a._v(" 3.2 常见配置参数")]),a._v(" "),t("h3",{attrs:{id:"_3-2-1-clean-start"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-clean-start"}},[a._v("#")]),a._v(" 3.2.1 Clean Start")]),a._v(" "),t("p",[a._v("Clean Start作用：用于指示客户端在和服务器建立连接的时候应该尝试恢复之前的会话还是直接创建全新的会话。")]),a._v(" "),t("p",[a._v("常见取值以及含义：")]),a._v(" "),t("p",[a._v("0：服务端存在一个关联此客户端标识符（Client ID）的会话，服务端"),t("strong",[a._v("必须")]),a._v("基于此会话的状态恢复与客户端的通信（之前的订阅信息会再次绑定，并且会接收到客户端断开")]),a._v(" "),t("p",[a._v("时，发布者所发布的消息）。如果不存在任何关联此客户端标识符的会话，服务端"),t("strong",[a._v("必须")]),a._v("创建一个新的会话。")]),a._v(" "),t("p",[a._v("1：客户端和服务端"),t("strong",[a._v("必须")]),a._v("丢弃任何已存在的会话，并开始一个新的会话。")]),a._v(" "),t("h3",{attrs:{id:"_3-2-2-session-expiry-interval"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-session-expiry-interval"}},[a._v("#")]),a._v(" 3.2.2 Session Expiry Interval")]),a._v(" "),t("p",[a._v("Session Expiry Interval 决定了会话状态数据在服务端的存储时长。")]),a._v(" "),t("p",[a._v("常见取值：")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("没有指定此属性或者设置为 0")]),a._v("，表示会话将在网络连接断开时立即结束。")]),a._v(" "),t("li",[t("strong",[a._v("设置为一个大于 0 的值")]),a._v("，则表示会话将在网络连接断开的多少秒之后过期。")]),a._v(" "),t("li",[t("strong",[a._v("设置为 0xFFFFFFFF")]),a._v("，即 Session Expiry Interval 属性能够设置的最大值时，表示会话数据永不过期。")])]),a._v(" "),t("p",[a._v("4、服务端使用 "),t("code",[a._v("Client ID")]),a._v(" 来唯一地标识每个会话，如果客户端想要在连接时复用之前的会话，那么必须使用与此前一致的 Client ID。")]),a._v(" "),t("h2",{attrs:{id:"_3-3-会话演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-会话演示"}},[a._v("#")]),a._v(" 3.3 会话演示")]),a._v(" "),t("p",[a._v("具体步骤：")]),a._v(" "),t("p",[a._v("1、在MQTTX中设置关闭自动重订阅功能")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702187.png",alt:"image-20240614175632096"}})]),a._v(" "),t("p",[a._v("2、创建一个名为 "),t("code",[a._v("sub")]),a._v(" 的客户端连接，将 MQTT Version 设置为 5.0，开启 Clean Start，Session Expiry Interval 设置为 300 秒，然后链接到MQTT的服")]),a._v(" "),t("p",[a._v("务端，并订阅主题 "),t("code",[a._v("mqttx_290c747e/test")]),a._v("：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702188.png",alt:"image-20240614175858938"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702189.png",alt:"image-20240614180017618"}})]),a._v(" "),t("p",[a._v("3、创建一个名为 "),t("code",[a._v("pub")]),a._v(" 的客户端连接向主题 "),t("code",[a._v("mqttx_290c747e/test")]),a._v(" 发布消息，消息内容可以随意设置，我们将看到 "),t("code",[a._v("sub")]),a._v(" 客户端收到这些消息。这时我们断开 "),t("code",[a._v("sub")])]),a._v(" "),t("p",[a._v("客户端的连接，然后继续通过 "),t("code",[a._v("pub")]),a._v(" 客户端发布消息：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702190.png",alt:"image-20240614180750824"}})]),a._v(" "),t("p",[a._v("4、接下来，我们将 "),t("code",[a._v("sub")]),a._v(" 客户端的 Clean Start 选项关闭，并保持 Session Expiry Interval 为 300 秒，然后再次连接。我们将看到 "),t("code",[a._v("sub")]),a._v(" 客户端陆续收到我")]),a._v(" "),t("p",[a._v("们在它离线期间发布的消息：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702191.png",alt:"image-20240614181024974"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702192.png",alt:"image-20240614181135093"}})]),a._v(" "),t("p",[a._v("以上就是 "),t("strong",[a._v("MQTT 会话为离线客户端缓存消息的能力")]),a._v("。")]),a._v(" "),t("h1",{attrs:{id:"_4-消息详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-消息详解"}},[a._v("#")]),a._v(" 4 消息详解")]),a._v(" "),t("h2",{attrs:{id:"_4-1-保留消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-保留消息"}},[a._v("#")]),a._v(" 4.1 保留消息")]),a._v(" "),t("h3",{attrs:{id:"_4-1-1-保留消息简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-1-保留消息简介"}},[a._v("#")]),a._v(" 4.1.1 保留消息简介")]),a._v(" "),t("p",[a._v("普通消息：普通消息在发送之前其所对应的主题如果不存在订阅者，普通消息MQTT服务器会直接将其丢弃。")]),a._v(" "),t("p",[a._v("保留消息：保留消息可以保留在 MQTT 服务器中。任何新的订阅者订阅与该保留消息中的主题匹配的主题时，都会立即接收到该消息，即使这个消息是在它们订阅主题之前")]),a._v(" "),t("p",[a._v("发布的。")]),a._v(" "),t("p",[a._v("如下图，当客户端订阅主题时，如果服务端存在该主题匹配的保留消息，则该保留消息将被立即发送给该客户端。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702193.png",alt:"image-20240605181844180"}})]),a._v(" "),t("p",[a._v("保留消息的常见使用场景：")]),a._v(" "),t("p",[a._v("1、智能家居设备的状态只有在变更时才会上报，但是控制端需要在上线后就能获取到设备的状态；")]),a._v(" "),t("p",[a._v("2、传感器上报数据的间隔太长，但是订阅者需要在订阅后立即获取到最新的数据；")]),a._v(" "),t("p",[a._v("3、传感器的版本号、序列号等不会经常变更的属性，可在上线后发布一条保留消息告知后续的所有订阅者；")]),a._v(" "),t("h3",{attrs:{id:"_4-1-2-保留消息使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-2-保留消息使用"}},[a._v("#")]),a._v(" 4.1.2 保留消息使用")]),a._v(" "),t("blockquote",[t("p",[a._v("发布保留消息")])]),a._v(" "),t("p",[a._v("在发布消息的时候将"),t("code",[a._v("Retained 标记被设置为 true")]),a._v("，则该消息即是 MQTT 中的保留消息（Retained Message）。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702194.png",alt:"image-20240605182651600"}})]),a._v(" "),t("p",[t("strong",[a._v("注意事项：")])]),a._v(" "),t("p",[a._v("1、可以通过Dashboard查看保留消息")]),a._v(" "),t("p",[a._v("2、MQTT 服务器会为每个主题存储"),t("code",[a._v("最新一条保留消息")])]),a._v(" "),t("p",[a._v("3、在保留消息发布前订阅主题，将不会收到保留消息。"),t("strong",[a._v("需要待保留消息发布后，重新订阅该主题，才会收到保留消息。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702195.png",alt:"image-20240605183304059"}})]),a._v(" "),t("blockquote",[t("p",[a._v("保留消息的存储方式")])]),a._v(" "),t("p",[a._v("保留消息的存储方式：内存存储(默认存储类型)、磁盘存储")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702196.png",alt:"image-20240605184430614"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702197.png",alt:"image-20240605184505301"}})]),a._v(" "),t("p",[a._v("5、保留消息虽然存储在服务端中，但它并不属于会话的一部分。也就是说，即便发布这个保留消息的会话已结束，保留消息也不会被删除。")]),a._v(" "),t("blockquote",[t("p",[a._v("保留消息的删除方式")])]),a._v(" "),t("p",[a._v("1、客户端往某个主题发送一个 Payload 为空的保留消息，服务端就会删除这个主题下的保留消息；")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702198.png",alt:"image-20240605184900727"}})]),a._v(" "),t("p",[a._v("2、在 MQTT 服务器上删除，比如 EMQX MQTT 服务器提供了在 Dashboard 上删除保留消息的功能；")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702199.png",alt:"image-20240605185015636"}})]),a._v(" "),t("p",[a._v("3、MQTT 5.0 新增了消息过期间隔属性，发布时可使用该属性设置消息的过期时间，将会在过期时间后自动被删除。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702200.png",alt:"image-20240605185243734"}})]),a._v(" "),t("h2",{attrs:{id:"_4-2-消息过期间隔"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-消息过期间隔"}},[a._v("#")]),a._v(" 4.2 消息过期间隔")]),a._v(" "),t("h3",{attrs:{id:"_4-2-1-消息过期间隔简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-消息过期间隔简介"}},[a._v("#")]),a._v(" 4.2.1 消息过期间隔简介")]),a._v(" "),t("p",[a._v("MQTT 可以通过"),t("code",[a._v("Session Expiry Interval")]),a._v("为离线客户端缓存尚未发送的消息，然后在客户端恢复连接时发送。但如果客户端离线时间较长，可能有一些寿命较短的消")]),a._v(" "),t("p",[a._v("息已经没有必要必须发送给客户端了，继续发送这些过期的消息，只会浪费网络带宽和客户端资源。")]),a._v(" "),t("p",[a._v("举例：以联网汽车为例，我们可以向车辆发送"),t("code",[a._v("建议车速")]),a._v("使它能够在绿灯期间通过路口，这类消息通常仅在车辆到达下一个路口之前有效，生命周期非常短暂。")]),a._v(" "),t("p",[a._v("消息过期间隔是 MQTT 5.0 引入的一个新特性，"),t("code",[a._v("它允许发布端为有时效性的消息设置一个过期间隔，如果该消息在服务端中停留超过了这个指定的间隔，那么服务端将")])]),a._v(" "),t("p",[t("code",[a._v("不会再将它分发给订阅端。默认情况下，消息中不会包含消息过期间隔，这表示该消息永远不会过期。")])]),a._v(" "),t("p",[a._v("注意：如果客户端在发布消息时设置了过期间隔，那么服务端在转发这个消息时也会包含过期间隔，但过期间隔的值会被更新为服务端接收到的值减去该消息在服务端停留的")]),a._v(" "),t("p",[a._v("时间。这可以避免消息的时效性在传递的过程中丢失，特别是在桥接到"),t("code",[a._v("另一个MQTT 服务器的时候")]),a._v("。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702201.png",alt:"image-20240614183022063"}})]),a._v(" "),t("h3",{attrs:{id:"_4-2-2-消息过期间演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-消息过期间演示"}},[a._v("#")]),a._v(" 4.2.2 消息过期间演示")]),a._v(" "),t("p",[a._v("具体步骤如下所示：")]),a._v(" "),t("p",[a._v("1、创建一个 "),t("code",[a._v("pub")]),a._v("的客户端链接，链接到MQTT服务端")]),a._v(" "),t("p",[a._v("2、新建一个名为 "),t("code",[a._v("sub")]),a._v(" 的客户端连接用于订阅，并将 "),t("code",[a._v("Session Expiry Interval 设置为 300 秒")]),a._v("表示这个会话状态的数据在服务端保存300s。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702202.png",alt:"image-20240614183636647"}})]),a._v(" "),t("p",[a._v("3、连接成功后，我们订阅主题 "),t("code",[a._v("mqttx_a9d86661/demo")]),a._v("，使用 Client ID 作为主题前缀可以有效避免主题重复：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702203.png",alt:"image-20240614183900590"}})]),a._v(" "),t("p",[a._v("4、订阅成功后，我们断开 "),t("code",[a._v("sub")]),a._v(" 客户端与服务器的连接，然后切换到 "),t("code",[a._v("pub")]),a._v(" 客户端，向主题 "),t("code",[a._v("mqttx_a9d86661/demo")]),a._v(" 发布以下两条 Message Expiry Interval 分")]),a._v(" "),t("p",[a._v("别为 5 秒和 60 秒的消息：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702204.png",alt:"image-20240614184140949"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702205.png",alt:"image-20240614184236579"}})]),a._v(" "),t("p",[a._v("5、发布完成后，切换到 "),t("code",[a._v("sub")]),a._v(" 客户端，将 Clean Session 设置为 false 表示想要恢复之前的会话，然后等待至少 5 秒再重新连接。我们将看到 "),t("code",[a._v("sub")]),a._v(" 只收到了过")]),a._v(" "),t("p",[a._v("期时间为 60 秒的消息，因为此时另一条消息已经过期：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702206.png",alt:"image-20240614184337946"}})]),a._v(" "),t("h2",{attrs:{id:"_4-3-遗嘱消息"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-遗嘱消息"}},[a._v("#")]),a._v(" 4.3 遗嘱消息")]),a._v(" "),t("h3",{attrs:{id:"_4-3-1-遗嘱消息简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-1-遗嘱消息简介"}},[a._v("#")]),a._v(" 4.3.1 遗嘱消息简介")]),a._v(" "),t("p",[a._v("在现实世界中，一个人可以制定一份遗嘱，声明在他去世后应该如何分配他的财产以及应该采取什么行动。在他去世后，遗嘱执行人会将这份遗嘱公开，并执行遗嘱中的指示")]),a._v(" "),t("p",[a._v("在 MQTT中，"),t("code",[a._v("客户端可以在连接时在服务端中注册一个遗嘱消息")]),a._v("，与普通消息类似，我们可以设置遗嘱消息的主题、有效载荷等等。"),t("code",[a._v("当该客户端意外断开连接，服务端就会")])]),a._v(" "),t("p",[t("code",[a._v("向其他订阅了相应主题的客户端发送此遗嘱消息")]),a._v("。这些接收者也因此可以及时地采取行动，例如向用户发送通知、切换备用设备等等。")]),a._v(" "),t("p",[a._v("作用：借助于遗嘱消息可以感知到客户端是意外断开")]),a._v(" "),t("h3",{attrs:{id:"_4-3-2-遗嘱消息原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-2-遗嘱消息原理"}},[a._v("#")]),a._v(" 4.3.2 遗嘱消息原理")]),a._v(" "),t("h4",{attrs:{id:"遗嘱消息指定时机"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遗嘱消息指定时机"}},[a._v("#")]),a._v(" 遗嘱消息指定时机")]),a._v(" "),t("p",[t("code",[a._v("遗嘱消息在客户端发起连接时指定")]),a._v("，它和 Client ID、Clean Start 这些字段一起包含在客户端发送的 CONNECT 报文中。")]),a._v(" "),t("p",[a._v("与普通消息一样，我们可以为遗嘱消息设置主题（Will Topic）、保留消息标识位（Will Retain）、属性（Will Properties）、QoS（Will QoS）和有效载荷")]),a._v(" "),t("p",[a._v("（Will Payload）。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702207.png",alt:"image-20240611184709615"}})]),a._v(" "),t("p",[a._v("这些字段的用法与它们在普通消息中时完全相同，只是遗嘱消息可用的属性与普通应用消息略有不同，下表列出了它们的具体区别：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702208.png",alt:"image-20240611184747463"}})]),a._v(" "),t("p",[a._v("遗嘱消息只是多了一个专属属性："),t("strong",[a._v("Will Delay Interval")]),a._v("。")]),a._v(" "),t("h4",{attrs:{id:"will-delay-interval"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#will-delay-interval"}},[a._v("#")]),a._v(" Will Delay Interval")]),a._v(" "),t("p",[a._v("作用："),t("code",[a._v("这个属性决定了服务端将在网络连接关闭后延迟多久发布遗嘱消息，并以秒为单位。")])]),a._v(" "),t("p",[a._v("默认情况下，服务端总是在网络连接意外关闭时立即发布遗嘱消息。但是很多时候，网络连接的中断是短暂的，所以客户端往往能够重新连接并继续之前的会话。这导致遗嘱")]),a._v(" "),t("p",[a._v("消息可能被频繁地且无意义地发送。")]),a._v(" "),t("p",[a._v("如果没有指定 Will Delay Interval 或者将其设置为 0，服务端将仍然在网络连接关闭时立即发布遗嘱消息。")]),a._v(" "),t("p",[a._v("但如果将 Will Delay Interval 设置为一个大于 0 的值，并且客户端能够在 Will Delay Interval 到期前恢复连接，那么该遗嘱消息将不会被发布。")]),a._v(" "),t("h4",{attrs:{id:"遗嘱消息与会话"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#遗嘱消息与会话"}},[a._v("#")]),a._v(" 遗嘱消息与会话")]),a._v(" "),t("p",[a._v("遗嘱消息是会话状态的一部分，当会话结束，遗嘱消息也无法继续单独存在。但是在遗嘱消息延迟发布期间，会话可能过期，也可能因为客户端在新的连接中设置Clean")]),a._v(" "),t("p",[a._v("Start 为 1 所以服务端需要丢弃之前的会话。为了避免丢失遗嘱，此时服务端必须发布该遗嘱消息，即便 Will Delay Interval 还没有到期。所以服务端最终何时发")]),a._v(" "),t("p",[a._v("布遗嘱消息，取决于 Will Delay Interval 到期和会话结束这两种情况谁先发生。")]),a._v(" "),t("h3",{attrs:{id:"_4-3-3-遗嘱消息演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-3-3-遗嘱消息演示"}},[a._v("#")]),a._v(" 4.3.3 遗嘱消息演示")]),a._v(" "),t("p",[a._v("具体步骤：")]),a._v(" "),t("p",[a._v("1、建立链接的时候指定遗嘱消息")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702209.png",alt:"image-20240614173917037"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702210.png",alt:"image-20240614174010066"}})]),a._v(" "),t("p",[a._v("在这个连接中我们指定了一个主题为 "),t("code",[a._v("mqttx_8189c0fc/status")]),a._v("，Payload 为 offline  的遗嘱消息，并且将 Will Delay Interval 设置为 5 秒，Session")]),a._v(" "),t("p",[a._v("Expiry Interval 设置为 300 秒：遗嘱消息主题使用 Client ID 作为前缀可以有效避免主题重复：")]),a._v(" "),t("p",[a._v("2、建立新的客户端连接到服务端，并且监听遗嘱消息主题")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702211.png",alt:"image-20240614174259052"}})]),a._v(" "),t("p",[a._v("3、正常关闭第一个链接，不会发送遗嘱消息")]),a._v(" "),t("p",[a._v("4、选择第一个链接右键新建窗口，在新的窗口中进行连接，然后将新的窗口关闭，等待5s就会在原有窗口的第二个链接中获取到遗嘱消息。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702212.png",alt:"image-20240614175148186"}})]),a._v(" "),t("h2",{attrs:{id:"_4-4-延迟发布"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-延迟发布"}},[a._v("#")]),a._v(" 4.4 延迟发布")]),a._v(" "),t("h3",{attrs:{id:"_4-4-1-延迟发布简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-1-延迟发布简介"}},[a._v("#")]),a._v(" 4.4.1 延迟发布简介")]),a._v(" "),t("p",[t("strong",[a._v("延迟发布简介")]),a._v("：MQTT服务端收到发布者发布的消息以后，延迟一段时间以后再把消息转发给订阅者")]),a._v(" "),t("p",[t("strong",[a._v("延迟发布的使用场景")]),a._v("：")]),a._v(" "),t("p",[a._v("1、农业智能化管理：在智能农业中，可能需要"),t("code",[a._v("在特定时间启动灌溉系统或调节温室环境。")]),a._v("通过MQTT延迟发布，可以预先设定好指令发布时间，如在清晨或傍晚自动发送开")]),a._v(" "),t("p",[a._v("启灌溉的信号，确保水资源的有效利用且不对作物生长周期造成干扰。")]),a._v(" "),t("p",[a._v("2、能源管理与自动控制：智能家居或智能建筑中的照明、供暖、通风系统可以根据居民生活习惯或节能策略，利用延迟发布在预设时间自动调整，如在居民到家前半小时开")]),a._v(" "),t("p",[a._v("启空调或在离开家后一定时间关闭所有非必要电器，以达到节能减排的目的。")]),a._v(" "),t("p",[a._v("3、公共设施维护：城市中的公共照明、广告牌等设施可能需要在特定时间统一开关，以节省能源或遵守当地法规。通过MQTT延迟发布功能，可以安排在夜间自动发送开关指")]),a._v(" "),t("p",[a._v("令，无需人工干预，简化运维流程。")]),a._v(" "),t("p",[a._v("4、医疗健康监护：在远程医疗监护中，设备可能需要在一天中的特定时间收集患者数据或发送提醒，如定时提醒患者服药或在固定时间收集心率、血压等生理参数，以优化")]),a._v(" "),t("p",[a._v("患者护理计划。")]),a._v(" "),t("p",[t("strong",[a._v("延迟发布主题格式：")]),t("code",[a._v("$delayed/{DelayInterval}/{TopicName}")])]),a._v(" "),t("p",[a._v("$delayed: 使用 "),t("code",[a._v("$delay")]),a._v(" 作为主题前缀的消息都将被视为需要延迟发布的消息")]),a._v(" "),t("p",[a._v("DelayInterval： 延迟发布的时间间隔，单位为妙，允许的最大间隔是 4294967 秒。如果 "),t("code",[a._v("{DelayInterval}")]),a._v(" 无法被解析为一个整型数字，EMQX 将丢弃该消")]),a._v(" "),t("p",[a._v("息，客户端不会收到任何信息。")]),a._v(" "),t("p",[a._v("TopicName：MQTT消息的主题名称")]),a._v(" "),t("p",[a._v("举例说明：")]),a._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$delayed")]),a._v("/15/x/y：15 秒后将 MQTT 消息发布到主题 x/y。\n "),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$delayed")]),a._v("/60/a/b：1 分钟后将 MQTT 消息发布到 a/b。\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h3",{attrs:{id:"_4-4-2-延迟发布演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-4-2-延迟发布演示"}},[a._v("#")]),a._v(" 4.4.2 延迟发布演示")]),a._v(" "),t("p",[a._v("具体步骤如下所示：")]),a._v(" "),t("p",[a._v("1、通过 Dashboard 配置延迟发布")]),a._v(" "),t("p",[a._v("打开 EMQX Dashboard，在左侧导航菜单中，点击"),t("strong",[a._v("管理")]),a._v("-> "),t("strong",[a._v("延迟发布")]),a._v("。")]),a._v(" "),t("p",[a._v("在"),t("strong",[a._v("延迟发布")]),a._v("页面，您可以进行以下配置：")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("启用")]),a._v(": 启用或禁用延迟发布。默认情况下，已启用。")]),a._v(" "),t("li",[t("strong",[a._v("最大延迟消息数")]),a._v("：可以指定延迟消息的最大数量。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702213.png",alt:"image-20240614192035903"}})]),a._v(" "),t("p",[a._v("2、在MQTTX中建立sub的客户端连接，并且添加订阅主题为"),t("code",[a._v("delay/msg")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702215.png",alt:"image-20240614193058971"}})]),a._v(" "),t("p",[a._v("3、在在MQTTX中建立pub的客户端连接，并且向主题 "),t("code",[a._v("$delayed/10/delay/msg")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702216.png",alt:"image-20240614193543577"}})]),a._v(" "),t("p",[a._v("4、等待 10 秒钟。您将看到客户端 "),t("code",[a._v("sub")]),a._v(" 在 10 秒后接收到延迟消息。")]),a._v(" "),t("h2",{attrs:{id:"_4-5-用户属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-用户属性"}},[a._v("#")]),a._v(" 4.5 用户属性")]),a._v(" "),t("h3",{attrs:{id:"_4-5-1-用户属性简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-1-用户属性简介"}},[a._v("#")]),a._v(" 4.5.1 用户属性简介")]),a._v(" "),t("p",[t("strong",[a._v("用户属性简介：")])]),a._v(" "),t("p",[a._v("1、MQTT 5.0版本引入的一个新特性。")]),a._v(" "),t("p",[a._v("2、它允许在Publish、Subscribe、Connect、Disconnect等报文中携带附加信息。")]),a._v(" "),t("p",[a._v("3、类似于http协议的请求头")]),a._v(" "),t("p",[t("strong",[a._v("用户属性的应用场景：")])]),a._v(" "),t("p",[a._v("1、日志记录：在发布（PUBLISH）和订阅（SUBSCRIBE）报文中加入用户属性，可以帮助记录操作者信息、操作时间、原因说明等，便于后续的审计跟踪和问题排查。")]),a._v(" "),t("p",[a._v("2、消息分类与标记：用户属性可以用来给消息添加标签或分类信息，如消息类型等，使得接收方能根据这些属性对消息进行过滤、排序或特殊处理。")]),a._v(" "),t("h3",{attrs:{id:"_4-5-2-用户属性演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-5-2-用户属性演示"}},[a._v("#")]),a._v(" 4.5.2 用户属性演示")]),a._v(" "),t("p",[a._v("最为常见的使用场景就是在发布消息的时候指定用户属性。")]),a._v(" "),t("p",[a._v("具体步骤：")]),a._v(" "),t("p",[a._v("1、创建"),t("code",[a._v("sub")]),a._v("的客户端连接，并且订阅"),t("code",[a._v("userprop/demo")]),a._v("主题")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702217.png",alt:"image-20240614195337453"}})]),a._v(" "),t("p",[a._v("2、创建"),t("code",[a._v("pub")]),a._v("的客户端连接，发送消息指定用户属性")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702218.png",alt:"image-20240614200504432"}})]),a._v(" "),t("p",[a._v("3、观察"),t("code",[a._v("sub")]),a._v("的客户端，可以看到获取到消息的内容同时也获取到了用户指定的属性")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702219.png",alt:"image-20240813185805362"}})]),a._v(" "),t("h1",{attrs:{id:"_5-订阅详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-订阅详解"}},[a._v("#")]),a._v(" 5 订阅详解")]),a._v(" "),t("h2",{attrs:{id:"_5-1-订阅选项"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-订阅选项"}},[a._v("#")]),a._v(" 5.1 订阅选项")]),a._v(" "),t("h3",{attrs:{id:"_5-1-1-订阅选项简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-1-订阅选项简介"}},[a._v("#")]),a._v(" 5.1.1 订阅选项简介")]),a._v(" "),t("p",[a._v("订阅的组成：")]),a._v(" "),t("p",[a._v("1、主题过滤器：决定了服务端将向我们转发哪些主题下的消息")]),a._v(" "),t("p",[a._v("2、订阅选项：是允许我们进一步定制服务端的转发行为")]),a._v(" "),t("p",[a._v("MQTT 5.0提供了4个订阅选项：QoS、No Local、Retain As Published、Retain Handling")]),a._v(" "),t("h3",{attrs:{id:"_5-1-2-qos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-2-qos"}},[a._v("#")]),a._v(" 5.1.2 QoS")]),a._v(" "),t("h4",{attrs:{id:"qos订阅选项简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#qos订阅选项简介"}},[a._v("#")]),a._v(" QoS订阅选项简介")]),a._v(" "),t("p",[a._v("QoS 是最常用的一个订阅选项，它表示服务端在向订阅端发送消息时可以使用的"),t("code",[a._v("最大QoS等级。")])]),a._v(" "),t("blockquote",[t("p",[a._v("情况1：服务端支持的最大 QoS < 客户端订阅时请求的最大QoS")])]),a._v(" "),t("p",[a._v("服务端将无法满足客户端的要求，这时服务端就会通过订阅的响应报文（SUBACK）告知订阅端最终授予的最大 QoS 等级，订阅端可以自行评估是否接受并继续通信。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702220.png",alt:"image-20240616193700670"}})]),a._v(" "),t("blockquote",[t("p",[a._v("情况2：订阅时请求的最大QoS < 消息发布时的QoS")])]),a._v(" "),t("p",[a._v("为了尽可能地投递消息，服务端不会忽略这些消息，而是会在转发时对这些消息的 QoS 进行降级处理。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702221.png",alt:"image-20240616193903060"}})]),a._v(" "),t("h4",{attrs:{id:"qos订阅选项演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#qos订阅选项演示"}},[a._v("#")]),a._v(" QoS订阅选项演示")]),a._v(" "),t("p",[a._v("具体步骤如下所示：")]),a._v(" "),t("p",[a._v("1、创建sub客户端连接，并且订阅"),t("code",[a._v("sub/qos/demo")]),a._v("主题, 并指定"),t("code",[a._v("QOS为0")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702222.png",alt:"image-20240616194428575"}})]),a._v(" "),t("p",[a._v("2、订阅成功以后，通过sub客户端连接向"),t("code",[a._v("sub/qos/demo")]),a._v("主题发布消息，并且指定QOS的登记为1")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702223.png",alt:"image-20240616194720265"}})]),a._v(" "),t("p",[a._v("结果：sub客户端收到的消息的QOS值为0")]),a._v(" "),t("h3",{attrs:{id:"_5-1-3-no-local"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-3-no-local"}},[a._v("#")]),a._v(" 5.1.3 No Local")]),a._v(" "),t("h4",{attrs:{id:"no-local订阅选项简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#no-local订阅选项简介"}},[a._v("#")]),a._v(" No Local订阅选项简介")]),a._v(" "),t("p",[a._v("No Local取值：")]),a._v(" "),t("p",[a._v("1、0(默认值)：服务端"),t("code",[a._v("可以")]),a._v("将消息转发给发布这个消息的客户端")]),a._v(" "),t("p",[a._v("2、1：服务端"),t("code",[a._v("不可以")]),a._v("将消息转发给发布这个消息的客户端")]),a._v(" "),t("p",[a._v("这个订阅选项尝尝被用在"),t("code",[a._v("桥接场景")]),a._v("中，桥接本质上是两个 MQTT Server 建立了一个 MQTT 连接，然后相互订阅一些主题，Server 将客户端的消息转发给另一个")]),a._v(" "),t("p",[a._v("Server，而另一个 Server 则可以将消息继续转发给它的客户端。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702224.png",alt:"image-20240616195926343"}})]),a._v(" "),t("p",[a._v("在桥接的场景中，如果没有将No Local订阅选项的值设置为1，那么此时会形成"),t("code",[a._v("转发风暴")]),a._v("。")]),a._v(" "),t("p",[a._v("举例：假设两个 MQTT Server 分别是 Server A 和 Server B，它们分别向对方订阅了"),t("code",[a._v("#")]),a._v("主题。现在，Server A 将一些来自客户端的消息转发给了 Server B，而")]),a._v(" "),t("p",[a._v("当 Server B 查找匹配的订阅时，Server A  也会位于其中。如果 Server B 将消息转发给了 Server A，那么同样 Server A 在收到消息后又会把它们再次转发")]),a._v(" "),t("p",[a._v("给  Server B，这样就陷入了无休止的转发风暴。")]),a._v(" "),t("p",[a._v("而如果 Server A 和 Server B 在订阅 "),t("code",[a._v("#")]),a._v(" 主题的同时，将 No Local 选项设置为 1，就可以完美地避免这个问题。")]),a._v(" "),t("h4",{attrs:{id:"no-local订阅选项演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#no-local订阅选项演示"}},[a._v("#")]),a._v(" No Local订阅选项演示")]),a._v(" "),t("p",[a._v("具体步骤：")]),a._v(" "),t("p",[a._v("1、创建sub客户端连接，并订阅"),t("code",[a._v("sub/local/demo")]),a._v("主题,并且设置"),t("code",[a._v("No Local订阅选项为1")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702225.png",alt:"image-20240616200839961"}})]),a._v(" "),t("p",[a._v("2、使用sub客户端连接向"),t("code",[a._v("sub/local/demo")]),a._v("主题发布消息")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702226.png",alt:"image-20240616201133263"}})]),a._v(" "),t("p",[a._v("结果：当前的客户端连接没有收到该主题中的消息")]),a._v(" "),t("h3",{attrs:{id:"_5-1-4-retain-as-published"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-4-retain-as-published"}},[a._v("#")]),a._v(" 5.1.4 Retain As Published")]),a._v(" "),t("h4",{attrs:{id:"retain-as-published订阅选项简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#retain-as-published订阅选项简介"}},[a._v("#")]),a._v(" Retain As Published订阅选项简介")]),a._v(" "),t("p",[a._v("Retain As Published取值：")]),a._v(" "),t("p",[a._v("1、0(默认值)：服务端在向此订阅转发应用消息时需要"),t("code",[a._v("清除")]),a._v("消息中的 Retain 标识不变")]),a._v(" "),t("p",[a._v("2、1：服务端在向此订阅转发应用消息时需要"),t("code",[a._v("保持")]),a._v("消息中的 Retain 标识不变")]),a._v(" "),t("p",[a._v("应用场景：桥接场景")]),a._v(" "),t("p",[a._v("桥接场景下带来了一些问题。我们继续沿用前面的设定，当 Server A 将保留消息转发给 Server B 时，由于消息中的 Retain  标识已经被清除，Server B 将不会")]),a._v(" "),t("p",[a._v("知道这原本是一条保留消息，自然不会再存储它。这就导致了保留消息无法跨桥接使用。")]),a._v(" "),t("p",[a._v("那么在 MQTT 5.0 中，我们可以让桥接的服务端在订阅时将 Retain As Published 选项设置为 1，来解决这个问题。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702227.png",alt:"image-20240616202624888"}})]),a._v(" "),t("h4",{attrs:{id:"retain-as-published订阅选项演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#retain-as-published订阅选项演示"}},[a._v("#")]),a._v(" Retain As Published订阅选项演示")]),a._v(" "),t("p",[a._v("具体步骤如下：")]),a._v(" "),t("p",[a._v("1、创建sub客户端连接，分别订阅主题"),t("code",[a._v("sub/rap/demo01")]),a._v("和"),t("code",[a._v("sub/rap/demo02")]),a._v(", 并且将Retain As Published设置为 0 和 1")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702228.png",alt:"image-20240616210740811"}})]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702229.png",alt:"image-20240616210832090"}})]),a._v(" "),t("p",[a._v("2、通过sub客户端连接分别向"),t("code",[a._v("sub/rap/demo01")]),a._v("和"),t("code",[a._v("sub/rap/demo02")]),a._v("主题发布"),t("code",[a._v("保留消息")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702230.png",alt:"image-20240616211242633"}})]),a._v(" "),t("h3",{attrs:{id:"_5-1-5-retain-handling"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-5-retain-handling"}},[a._v("#")]),a._v(" 5.1.5 Retain Handling")]),a._v(" "),t("h4",{attrs:{id:"retain-handling订阅选项简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#retain-handling订阅选项简介"}},[a._v("#")]),a._v(" Retain Handling订阅选项简介")]),a._v(" "),t("p",[a._v("作用：Retain Handling 这个订阅选项被用来向服务端指示当订阅建立时，"),t("code",[a._v("是否需要发送保留消息")]),a._v("。")]),a._v(" "),t("p",[a._v("Retain Handling常见取值：")]),a._v(" "),t("p",[a._v("1、0(默认值)：表示只要订阅建立，就发送保留消息；")]),a._v(" "),t("p",[a._v("2、1：表示只有建立全新的订阅而不是重复订阅时，才发送保留消息；")]),a._v(" "),t("p",[a._v("3、2：表示订阅建立时不要发送保留消息；")]),a._v(" "),t("h4",{attrs:{id:"retain-handling订阅选项演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#retain-handling订阅选项演示"}},[a._v("#")]),a._v(" Retain Handling订阅选项演示")]),a._v(" "),t("p",[a._v("具体步骤如下所示：")]),a._v(" "),t("blockquote",[t("p",[a._v("情况1：Retain Handling值设置为0")])]),a._v(" "),t("p",[a._v("1、开启客户端的自动重订阅功能")]),a._v(" "),t("p",[a._v("2、创建sub客户端连接(Clean Start值设置为1，并且将Session Expiry Interval设置为300)，并且向"),t("code",[a._v("sub/rh/demo")]),a._v("主题中发布一个保留消息")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702231.png",alt:"image-20240616225928723"}})]),a._v(" "),t("p",[a._v("3、在sub客户端连接中，订阅"),t("code",[a._v("sub/rh/demo")]),a._v("主题，并且将"),t("code",[a._v("Retain Handling的值设置为0")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702232.png",alt:"image-20240616230123050"}})]),a._v(" "),t("p",[a._v("结果：只要订阅成功了，那么此时立马会收到保留消息")]),a._v(" "),t("p",[a._v("4、关闭客户端连接，设置客户端的"),t("code",[a._v("Clean Start值设置为0")]),a._v("表示需要复用之间的会话")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702233.png",alt:"image-20240616231557332"}})]),a._v(" "),t("p",[a._v("注意：只要是重新订阅成功了，那么此时就会收到保留消息")]),a._v(" "),t("blockquote",[t("p",[a._v("情况2：Retain Handling设置为1")])]),a._v(" "),t("p",[a._v("删除sub客户端连接中的订阅，重新订阅"),t("code",[a._v("sub/rh/demo")]),a._v("主题，并且将"),t("code",[a._v("Retain Handling的值设置为1")]),a._v("，新建立的订阅是可以获取到保留消息的。")]),a._v(" "),t("p",[a._v("关闭当前连接，重新建立连接【会自动复用之前的订阅】，此时无法获取到保留消息。")]),a._v(" "),t("blockquote",[t("p",[a._v("情况3: Retain Handling设置为2")])]),a._v(" "),t("p",[a._v("删除sub客户端连接中的订阅，重新订阅"),t("code",[a._v("sub/rh/demo")]),a._v("主题，并且将"),t("code",[a._v("Retain Handling的值设置为2")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702234.png",alt:"image-20240616230337341"}})]),a._v(" "),t("p",[a._v("结果：即使订阅成功了，那么此时也不会收到保留消息")]),a._v(" "),t("h2",{attrs:{id:"_5-2-共享订阅"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-共享订阅"}},[a._v("#")]),a._v(" 5.2 共享订阅")]),a._v(" "),t("h3",{attrs:{id:"_5-2-1-共享订阅简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-1-共享订阅简介"}},[a._v("#")]),a._v(" 5.2.1 共享订阅简介")]),a._v(" "),t("p",[a._v("在普通的订阅中，我们每发布一条消息，所有匹配的订阅端都会收到该消息的副本。当某个订阅端的消费速度无法跟上消息的生产速度时，我们没有办法将其中一部分消息分")]),a._v(" "),t("p",[a._v("流到其他订阅端中来分担压力。这使订阅端容易成为整个消息系统的性能瓶颈。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702235.png",alt:"image-20240617181713327"}})]),a._v(" "),t("p",[a._v("MQTT 5.0 引入了共享订阅特性，"),t("code",[a._v("它使得 MQTT 服务端可以在使用特定订阅的客户端之间均衡地分配消息负载。")]),a._v("这表示，当我们有两个客户端共享一个订阅时，那么每个")]),a._v(" "),t("p",[a._v("匹配该订阅的消息都只会有一个副本投递给其中一个客户端。")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702236.png",alt:"image-20240617182035927"}})]),a._v(" "),t("p",[a._v("共享订阅不仅为消费端带来了极佳的水平扩展能力，使我们可以应对更"),t("code",[a._v("高的吞吐量")]),a._v("，还为其带来了"),t("code",[a._v("高可用性")]),a._v("，即使共享订阅组中的一个客户端断开连接或发生故障，其他客")]),a._v(" "),t("p",[a._v("户端仍然可以继续处理消息，在必要时还可以接管原先流向该客户端的消息流。")]),a._v(" "),t("h3",{attrs:{id:"_5-2-2-共享订阅分类"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-2-共享订阅分类"}},[a._v("#")]),a._v(" 5.2.2 共享订阅分类")]),a._v(" "),t("p",[a._v("启用共享订阅：为一组订阅者的原始主题添加指定前缀")]),a._v(" "),t("p",[a._v("共享订阅分类：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("前缀格式")]),a._v(" "),t("th",[a._v("示例")]),a._v(" "),t("th",[a._v("前缀")]),a._v(" "),t("th",[a._v("真实主题名")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("带群组格式")]),a._v(" "),t("td",[a._v("$share/abc/t/1")]),a._v(" "),t("td",[a._v("$share/abc")]),a._v(" "),t("td",[a._v("t/1")])]),a._v(" "),t("tr",[t("td",[a._v("不带群组格式")]),a._v(" "),t("td",[a._v("$queue/t/1")]),a._v(" "),t("td",[a._v("$queue/")]),a._v(" "),t("td",[a._v("t/1")])])])]),a._v(" "),t("h4",{attrs:{id:"带群组的共享订阅"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#带群组的共享订阅"}},[a._v("#")]),a._v(" 带群组的共享订阅")]),a._v(" "),t("p",[a._v("您可以通过在原始主题前添加 "),t("code",[a._v("$share/<group-name>")]),a._v(" 前缀为分组的订阅者启用共享订阅。组名可以是任意字符串。EMQX 同时将消息转发给不同的组，属于同一组的订")]),a._v(" "),t("p",[a._v("阅者可以使用负载均衡接收消息。")]),a._v(" "),t("p",[a._v("例如，如果订阅者 "),t("code",[a._v("s1")]),a._v("、"),t("code",[a._v("s2")]),a._v(" 和 "),t("code",[a._v("s3")]),a._v(" 是组 "),t("code",[a._v("g1")]),a._v(" 的成员，订阅者 "),t("code",[a._v("s4")]),a._v(" 和 "),t("code",[a._v("s5")]),a._v(" 是组 "),t("code",[a._v("g2")]),a._v(" 的成员，而所有订阅者都订阅了原始主题 "),t("code",[a._v("t1")]),a._v("。共享订阅的主题是")]),a._v(" "),t("p",[t("code",[a._v("$share/g1/t1")]),a._v(" 和 "),t("code",[a._v("$share/g2/t1")]),a._v("。当 EMQX 发布消息 "),t("code",[a._v("msg1")]),a._v(" 到原始主题 "),t("code",[a._v("t1")]),a._v(" 时：")]),a._v(" "),t("ul",[t("li",[a._v("EMQX 将 "),t("code",[a._v("msg1")]),a._v(" 发送给 "),t("code",[a._v("g1")]),a._v(" 和 "),t("code",[a._v("g2")]),a._v(" 两个组。")]),a._v(" "),t("li",[t("code",[a._v("s1")]),a._v("、"),t("code",[a._v("s2")]),a._v("、"),t("code",[a._v("s3")]),a._v(" 中的一个订阅者将接收 "),t("code",[a._v("msg1")]),a._v("。")]),a._v(" "),t("li",[t("code",[a._v("s4")]),a._v(" 和 "),t("code",[a._v("s5")]),a._v(" 中的一个订阅者将接收 "),t("code",[a._v("msg1")]),a._v("。")])]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702237.png",alt:"image-20240617183755240"}})]),a._v(" "),t("h4",{attrs:{id:"不带群组的共享订阅"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不带群组的共享订阅"}},[a._v("#")]),a._v(" 不带群组的共享订阅")]),a._v(" "),t("p",[a._v("以 "),t("code",[a._v("$queue/")]),a._v(" 为前缀的共享订阅是不带群组的共享订阅。它是 "),t("code",[a._v("$share")]),a._v(" 订阅的一种特例。您可以将其理解为所有订阅者都在一个订阅组中：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702238.png",alt:"image-20240617183907336"}})]),a._v(" "),t("h3",{attrs:{id:"_5-2-3-共享订阅演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-3-共享订阅演示"}},[a._v("#")]),a._v(" 5.2.3 共享订阅演示")]),a._v(" "),t("p",[a._v("1、创建4个客户端连接分别是"),t("code",[a._v("sub1")]),a._v("、"),t("code",[a._v("sub2")]),a._v("、"),t("code",[a._v("sub3")]),a._v("、"),t("code",[a._v("sub4")]),a._v("，其中s1和s2属于同一个共享订阅组g1, s3和s4属于同一个共享订阅组g2")]),a._v(" "),t("p",[a._v("订阅的主题如下所示：")]),a._v(" "),t("p",[a._v("sub1： $share/g1/t/1")]),a._v(" "),t("p",[a._v("sub2： $share/g1/t/1")]),a._v(" "),t("p",[a._v("sub3： $share/g2/t/1")]),a._v(" "),t("p",[a._v("sub4： $share/g2/t/1")]),a._v(" "),t("p",[a._v("2、创建pub客户端连接，并且向t/1主题发布两条消息观测结果")]),a._v(" "),t("p",[a._v("默认的负载均衡算法："),t("code",[a._v("轮询")])]),a._v(" "),t("p",[a._v("3、删除sub1、sub2、sub3、sub4的订阅信息，重新添加"),t("code",[a._v("$queue/t/1")]),a._v("订阅")]),a._v(" "),t("p",[a._v("4、通过pub客户端向t/1主题发布消息观测结果")]),a._v(" "),t("h3",{attrs:{id:"_5-2-5-负载均衡算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-5-负载均衡算法"}},[a._v("#")]),a._v(" 5.2.5 负载均衡算法")]),a._v(" "),t("p",[a._v("可以通过Dashboard进行负载均衡算法的配置【管理====>MATT配置】：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702239.png",alt:"image-20240617191607519"}})]),a._v(" "),t("p",[a._v("大致可以分为：")]),a._v(" "),t("p",[a._v("1、随机（Random），在共享订阅组内随机选择一个会话发送消息。")]),a._v(" "),t("p",[a._v("2、轮询（Round Robin），在共享订阅组内按顺序选择一个会话发送消息，循环往复。")]),a._v(" "),t("p",[a._v("3、哈希（Hash），基于某个字段的哈希结果来分配。")]),a._v(" "),t("p",[a._v("4、粘性（Sticky），在共享订阅组内随机选择一个会话发送消息，此后保持这一选择，直到该会话结束再重复这一过程。")]),a._v(" "),t("p",[a._v("6、本地优先（Local），随机选择，但优先选择与消息的发布者处于同一节点的会话，如果不存在这样的会话，则退化为普通的随机策略。")]),a._v(" "),t("h2",{attrs:{id:"_5-3-排它订阅"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-排它订阅"}},[a._v("#")]),a._v(" 5.3 排它订阅")]),a._v(" "),t("h3",{attrs:{id:"_5-3-1-排它订阅简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-1-排它订阅简介"}},[a._v("#")]),a._v(" 5.3.1 排它订阅简介")]),a._v(" "),t("p",[a._v("排它订阅允许对主题进行互斥订阅，"),t("code",[a._v("一个主题同一时刻仅被允许存在一个订阅者，在当前订阅者未取消订阅前，其他订阅者都将无法订阅对应主题。")])]),a._v(" "),t("p",[a._v("要进行排它订阅，您需要为主题名称添加"),t("code",[a._v("$exclusive/")]),a._v("前缀，如以下表格中的示例：")]),a._v(" "),t("table",[t("thead",[t("tr",[t("th",[a._v("示例")]),a._v(" "),t("th",[a._v("前缀")]),a._v(" "),t("th",[a._v("真实主题名")])])]),a._v(" "),t("tbody",[t("tr",[t("td",[a._v("$exclusive/t/1")]),a._v(" "),t("td",[a._v("$exclusive/")]),a._v(" "),t("td",[a._v("t/1")])])])]),a._v(" "),t("p",[a._v("当某个客户端 "),t("strong",[a._v("A")]),a._v(" 订阅 "),t("code",[a._v("$exclusive/t/1")]),a._v(" 后，其他客户端再订阅 "),t("code",[a._v("$exclusive/t/1")]),a._v(" 时都会失败，直到 "),t("strong",[a._v("A")]),a._v(" 取消了对 "),t("code",[a._v("$exclusive/t/1")]),a._v(" 的订阅为止。")]),a._v(" "),t("p",[t("strong",[a._v("注意")]),a._v(": 排它订阅必须使用 "),t("code",[a._v("$exclusive/")]),a._v(" 前缀，在上面的示例中，其他客户端依然可以通过 "),t("code",[a._v("t/1")]),a._v(" 成功进行订阅。")]),a._v(" "),t("p",[a._v("订阅失败的常见错误码：")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702240.png",alt:"image-20240617192427487"}})]),a._v(" "),t("h3",{attrs:{id:"_5-3-2-排它订阅演示"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-3-2-排它订阅演示"}},[a._v("#")]),a._v(" 5.3.2 排它订阅演示")]),a._v(" "),t("p",[a._v("默认情况下排它订阅是关闭的。")]),a._v(" "),t("p",[a._v("具体步骤：")]),a._v(" "),t("p",[a._v("1、创建sub1客户端连接，并且添加"),t("code",[a._v("$exclusive/t/1")]),a._v("订阅")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702241.png",alt:"image-20240617193008239"}})]),a._v(" "),t("p",[a._v("2、在Dashboard开启排它订阅配置【管理====>MATT配置】")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702242.png",alt:"image-20240617193118733"}})]),a._v(" "),t("p",[a._v("3、在sub2客户端连接中重新添加"),t("code",[a._v("$exclusive/t/1")]),a._v("订阅")]),a._v(" "),t("p",[a._v("4、创建sub2客户端连接，并且添加"),t("code",[a._v("$exclusive/t/1")]),a._v("订阅")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702243.png",alt:"image-20240617193602657"}})]),a._v(" "),t("p",[a._v("5、创建sub2客户端连接，并且添加"),t("code",[a._v("t/1")]),a._v("订阅，此时订阅成功")]),a._v(" "),t("h2",{attrs:{id:"_5-4-自动订阅"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-自动订阅"}},[a._v("#")]),a._v(" 5.4 自动订阅")]),a._v(" "),t("p",[a._v("自动订阅能够给 EMQX 设置多个规则，在设备成功连接后按照规则为其订阅指定主题，不需要额外发起订阅。")]),a._v(" "),t("h3",{attrs:{id:"_5-4-1-配置自动订阅规则"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-1-配置自动订阅规则"}},[a._v("#")]),a._v(" 5.4.1 配置自动订阅规则")]),a._v(" "),t("p",[a._v("通过 Dashboard 配置自动订阅规则：【管理 ====> MQTT高级特性 =====> 自动订阅 ====> 添加】")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702244.png",alt:"image-20240617194802463"}})]),a._v(" "),t("h3",{attrs:{id:"_5-4-2-演示自动订阅使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-4-2-演示自动订阅使用"}},[a._v("#")]),a._v(" 5.4.2 演示自动订阅使用")]),a._v(" "),t("p",[a._v("具体步骤：")]),a._v(" "),t("p",[a._v("1、创建pub客户端连接，作为发布者")]),a._v(" "),t("p",[a._v("2、创建sub客户端连接，作为订阅者")]),a._v(" "),t("p",[a._v("3、在pub客户端连接中向a/1主题发布消息")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://gitee.com/yuhaostudy/blogimages/raw/master/images/20250625164702245.png",alt:"image-20240617200250225"}})])])}),[],!1,null,null,null);t.default=v.exports}}]);